<UserControl x:Class="MapControlTryOuts.Views.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:providers="clr-namespace:MapControlTryOuts.Providers"
             xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:extensions="clr-namespace:MapControlTryOuts.Extensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <extensions:BooleanToVisibilityConverter x:Key="bool2visibility"/>
        <extensions:BooleanToVisibilityConverterInverted x:Key="bool2visibilityinv"/>
        <extensions:IntegerToIconConverter x:Key="int2icon"/>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <Style x:Key="PointItemStyle" TargetType="map:MapItem">
                <Setter Property="AutoCollapse" Value="True"/>
                <Setter Property="LocationMemberPath" Value="Point.Location"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">

                            <Canvas MouseEnter="Canvas_MouseEnter" MouseLeave="Canvas_MouseLeave"
                                    MouseLeftButtonDown="Canvas_MouseLeftButtonDown" >
                                <materialDesign:PackIcon Kind="{Binding TechnicalData.IconInt, Converter={StaticResource int2icon}}" Height="{Binding Point.IconSize}" Width="{Binding Point.IconSize}" 
                                                         Visibility="{Binding Point.Visible, Converter={StaticResource bool2visibility}}"/>
                                <!--<materialDesign:PackIcon Kind="Truck" Height="{Binding Point.IconSize}" Width="{Binding Point.IconSize}" 
                                                         Visibility="{Binding Point.IsSelected, Converter={StaticResource bool2visibility}}"/>-->
                                <Grid Canvas.Left="15" Canvas.Top="-8">
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" Visibility="{Binding Point.IsSelected, Converter={StaticResource bool2visibility}}"/>
                                </Grid>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HostileObjectsStyle" TargetType="map:MapItem">
                <Setter Property="AutoCollapse" Value="True"/>
                <Setter Property="LocationMemberPath" Value="Point.Location"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">

                            <Canvas>
                                <materialDesign:PackIcon Kind="ImageFilterCenterFocusWeak" Height="{Binding Point.IconSize}" Width="{Binding IconSize}" Visibility="{Binding Point.Visible, Converter={StaticResource bool2visibility}}"/>
                                <materialDesign:PackIcon Kind="ImageFilterCenterFocus" Height="{Binding Point.IconSize}" Width="{Binding IconSize}" Visibility="{Binding Point.IsVisibleSelected, Converter={StaticResource bool2visibility}}"/>
                                <Grid Canvas.Left="15" Canvas.Top="-8">
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" Visibility="{Binding Point.IsVisibleSelected, Converter={StaticResource bool2visibility}}"/>
                                </Grid>
                            </Canvas>
                            
                            <!--<Canvas>
                                <Path Fill="Transparent" Stroke="DarkRed" StrokeThickness="1"
                                      Data="M17.94 11H13V9h4.94A8 8 0 0 0 11 2.06V7H9V2.06A8 8 0 0 0 2.06 9H7v2H2.06A8 8 0 0 0 9 17.94V13h2v4.94A8 8 0 0 0 17.94 11zM10 20a10 10 0 1 1 0-20 10 10 0 0 1 0 20z">
                                </Path>


                                <Grid Canvas.Left="15" Canvas.Top="-8">
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}"/>
                                </Grid>
                            </Canvas>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AmmoObjectsStyle" TargetType="map:MapItem">
                <Setter Property="AutoCollapse" Value="True"/>
                <Setter Property="LocationMemberPath" Value="Point.Location"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">
                            <Canvas>
                                <!--<materialDesign:PackIcon Kind="RocketLaunchOutline" Height="20" Width="20" 
                                                         Visibility="{Binding Visible, Converter={StaticResource bool2visibility}}"/>-->
                                <materialDesign:PackIcon Kind="{Binding TechnicalData.IconInt, Converter={StaticResource int2icon}}" Height="{Binding Point.IconSize}" Width="{Binding Point.IconSize}" 
                                                         Visibility="{Binding Point.Visible, Converter={StaticResource bool2visibility}}"/>

                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HitsStyle" TargetType="map:MapItem">
                <Setter Property="AutoCollapse" Value="True"/>
                <Setter Property="LocationMemberPath" Value="Point.Location"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="map:MapItem">

                            <Canvas>
                                <materialDesign:PackIcon Kind="StarburstOutline" Height="20" Width="20"/>
                            </Canvas>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width = "*" />
            <ColumnDefinition Width = "3*" />
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <DockPanel LastChildFill="True" Grid.Row="0">
                <TextBlock Text="Zasoby"
                       Background="OliveDrab"
                       TextAlignment="Left"
                       FontSize="15"
                       DockPanel.Dock="Top"/>
                <DataGrid x:Name="ResourcesDataGrid" Background="Transparent"
                          ItemsSource="{Binding Path = Resources}"
                          FontSize="10"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          MouseRightButtonUp="DataGrid_MouseRightButtonUp"
                          SelectionMode="Single"
                          CanUserResizeColumns="False"
                          CanUserResizeRows="False"
                          AutoGenerateColumns="False"
                          AlternatingRowBackground="LightGray"
                          BorderThickness="0"
                          SelectionChanged="ResourcesDataGrid_SelectionChanged">
                    <DataGrid.Columns>
                        <!--<DataGridCheckBoxColumn Header="Zaznaczone" Binding="{Binding Path=SelectedResource, Mode=TwoWay}"/>-->
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="SelectedResource" x:Name="SelectedResourceRadioButton" Checked="SelectedResourceRadioButton_Checked"
                                                 Unchecked="SelectedResourceRadioButton_Unchecked"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Nazwa" Binding="{Binding Path= Name}" Width="4*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        
                        <DataGridTextColumn Header="Lokalizacja" Binding="{Binding Path= Point.Location}" Width="6*">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <!--<DataGridTextColumn Header="Szer. geogr." Binding="{Binding Path= Latitude, StringFormat= n3}" Width="2*">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Dł. geogr." Binding="{Binding Path= Longitude, StringFormat= n3}" Width="2*">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>-->

                        <DataGridTextColumn Header="Max amunicja" Binding="{Binding Path= TechnicalData.MaxAmmoCapacity}" Width="2*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Pozostało amunicji" Binding="{Binding Path= AmmoContainer.Count}" Width="2*" IsReadOnly="True"/>
                    </DataGrid.Columns>

                </DataGrid>
            </DockPanel>

            <DockPanel LastChildFill="True" Grid.Row="1">
                <TextBlock Text="Wrogie obiekty"
                       Background="OrangeRed"
                       TextAlignment="Left"
                       FontSize="15"
                       DockPanel.Dock="Top"/>
                <DataGrid x:Name="HostileObjectsDataGrid" Background="Transparent"
                          ItemsSource="{Binding Path = HostileObjects}"
                          FontSize="10"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          MouseRightButtonUp="DataGrid_MouseRightButtonUp"
                          CanUserResizeColumns="False"
                          AutoGenerateColumns="False"
                          AlternatingRowBackground="LightGray"
                          BorderThickness="0"
                          SelectionChanged="HostileObjectsDataGrid_SelectionChanged">
                    <DataGrid.Resources>
                        <extensions:BindingProxy x:Key="HostilesMultiSelectionProxy" Data="{Binding HostilesMultiSelection}"/>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="*" 
                                                Visibility="{Binding Data, Converter={StaticResource bool2visibilityinv}, Source={StaticResource HostilesMultiSelectionProxy}}">
                        <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton GroupName="SelectedHostile" x:Name="SelectedHostileRadioButton" Checked="SelectedHostileRadioButton_Checked"
                                                 Unchecked="SelectedHostileRadioButton_Unchecked"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="*" 
                                                Visibility="{Binding Data, Converter={StaticResource bool2visibility}, Source={StaticResource HostilesMultiSelectionProxy}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox x:Name="SelectedHostileCheckBox" Checked="SelectedHostileCheckBox_Checked" Unchecked="SelectedHostileCheckBox_Unchecked"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Nazwa" Binding="{Binding Path= Name}" Width="4*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Lokalizacja" Binding="{Binding Path= Point.Location}" Width="6*" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Zdrowie" Binding="{Binding Path= Health}" Width="2*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Odporność p-lot" Binding="{Binding Path= AntiAircraftResistency}" Width="2*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
            <DockPanel LastChildFill="True" Grid.Row="2">
                <TextBlock Text="{Binding Path=SelectedResource.TextDetails}"
                           TextWrapping="WrapWithOverflow"
                           Padding="10, 10, 10, 10"
                           Background="Transparent"/>
            </DockPanel>
            <WrapPanel Grid.Row="3">
                <Button Content="Ognia!" Name="FireButton" Click="FireButton_Click"
                    Command="{Binding FireCommand}"
                    Width="100" Margin="5"
                    HorizontalAlignment="Left"
                    Grid.Row="2"/>
                <Button Content="Śledź cel!" Name="RefreshTarget"
                    Command="{Binding HostilesTrackingCommand}"
                    Width="100" Margin="5"
                    HorizontalAlignment="Left"
                    Grid.Row="2"/>
            </WrapPanel>
        </Grid>

        <Grid Grid.Column="1">
            <providers:MapProvider x:Name="mapLayer">

                <map:MapItemsControl ItemsSource="{Binding Path = Resources}"
                                     x:Name="MapItemsControl"
                                     ItemContainerStyle="{StaticResource PointItemStyle}"/>

                <map:MapItemsControl ItemsSource="{Binding Path = HostileObjects}"
                                     x:Name="HostileObjectstControl"
                                     ItemContainerStyle="{StaticResource HostileObjectsStyle}" />

                <!--<map:MapItemsControl ItemsSource="{Binding Path = VisibleAmmo}"-->
                <map:MapItemsControl ItemsSource="{Binding Path = AmmoContainers}"
                                     x:Name="AmmoContainersControl"
                                     ItemContainerStyle="{StaticResource AmmoObjectsStyle}"/>

                <map:MapItemsControl ItemsSource="{Binding Path = VisibleHits}"
                                     x:Name="HitObjectsControl"
                                     ItemContainerStyle="{StaticResource HitsStyle}"/>

            </providers:MapProvider>

            <Border HorizontalAlignment="Center" VerticalAlignment="Top" Margin="4"
                Background="#AFFFFFFF" IsHitTestVisible="False">
                <TextBlock x:Name="mouseLocation" Margin="4,2" Visibility="Visible" Text="{Binding Path = DistanceBetweenSelected, StringFormat={}Dystans: {0:N0}m}"/>
            </Border>


            <Canvas x:Name="CurrentCanvas" >
                <Rectangle x:Name="selectionRectangle"
                      
                       StrokeDashCap="Flat" StrokeDashOffset="2" 
                       StrokeDashArray="1" Stroke="DarkSlateGray" StrokeThickness="1"
                       Height="{Binding Path = Rectangle.Height}"
                       Width="{Binding Path = Rectangle.Width}"
                       Canvas.Left="{Binding Path = Rectangle.X}"
                       Canvas.Top="{Binding Path = Rectangle.Y}"/>
            </Canvas>
        </Grid>
    </Grid>
</UserControl>
